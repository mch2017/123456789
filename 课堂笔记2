GIT 是一个分布式版本控制软件，最初由林纳斯·托瓦兹（Linus Torvalds）创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。
是目前世界上最先进的分布式版本控制系统.    
#ubuntu linux 安装方法：  
$ sudo apt-get install git     
#Mac ox 安装方法：   
$ brew install git   
#创建git本地仓库
$mkdir git
$ cd git
$ mkdir c
$ cd c
$ git init
$ 
#增加文件   
1. 复制已有的文件到当前目录里：
$ cp ../../c/*.c .  
2. 创建一个新的文件    
$ touch hello.c
$ vim hello.c   //输出hello world字符串的C语言的程序（代码）     
#查看目录状态    
查看当前目录下的文件在git仓库中的状态。
$ git status
#跟踪文件   
将当前目录下的所有文件， 进行跟踪。    
$ git add .   
#配置个人用户信息   
为提交增加个人用户信息。  
$ git config --global user.name "Richard"
$ git config --global user.email "leix.wang@outlook.com"  
$ git config --global core.editor vim   
#提交    
向本地git仓库提交， 跟踪文件。
1. $ git commit
1. First commit
2. 
3. Init commit.   
#查看提交信息  
$ git log  
第一行： commit ID
第二行： 提交作者名子和email.
第三行： 提交的时间
第四行： 提交信息标题
第五行： 提交信息具体内容    
#git diff   
1. 查看修改源码    
$ git diff     
2. 两个提交版本之间做比较    
$ git diff  commitID-1 commitID-2   
3. 理解Patch标记格式的含义  
#删除文件     
1. 删除文件后， 恢复文件 
$ rm -rf hello.c
$ git status
$ git checkout hello.c    
2. 从版本库里删除文件。（真正删除文件）
$ git rm hello.c (or) rm hello.c
$ git status
$ git add .
$ git commit    
#版本之间切换      
根据commitID， 可以进行版本切换   
$ git reset --hard commitID
#忽略文件   
忽略不需要跟踪到git仓库里的文件    
$ touch .gitignore
$ vim .gitignore
-----
a.out
-----
$ git add .
$ git commit     #github


1. 注册github帐号

    1. 注册邮箱， 注意不要使用QQ.com

2. 创建gitc仓库

3. 从github将创建的gitc仓库， 克隆到本地    
$ git clone https://github.com/username/gitc.git   
4. 将本地仓库与github仓库进行同步， 将本地提交推送到服务器上
$ git push origin master
input username:
input password:  
5. 更新本地仓库， 与github仓库进行同步。将服务器提交拉取到本地   
$ git pull 
